{"version":3,"sources":["components/DisplayChild.js","components/Display.js","components/Calculator.js","index.js"],"names":["DisplayChild","_ref","func","text","react_default","a","createElement","defaultProps","Display","CASES_REPORTED_PER_ACTUAL_CASE","odds","_this$props","_this","props","population","dailyCases","daysContagious","percentReported","group","circulatingCases","prob","Math","pow","toFixed","formula","_this$props2","toLocaleString","components_DisplayChild","this","Component","Calculator","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","populationValue","dailyCasesValue","groupValue","daysContagiousValue","percentReportedValue","updateSearchParams","params","URLSearchParams","prop","append","window","history","replaceState","concat","location","pathname","handlePopulationChange","value","setState","handleDailyCasesChange","handleDaysContagiousChange","handlePartReportedChange","handleGroupChange","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","search","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","val","parseInt","err","return","_this$state","className","js_default","step","maxValue","minValue","onChange","href","components_Display","ReactDOM","render","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.412e179d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst DisplayChild = ({ func, text }) => {\n  return (\n    <span>\n      {func} <small>{text}</small>\n    </span>\n  );\n};\n\nDisplayChild.defaultProps = {\n  func: () => <p>Missing numeric value</p>,\n  text: \"No value provided\"\n};\n\nDisplayChild.propTypes = {\n  func: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default DisplayChild;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DisplayChild from \"./DisplayChild\";\n\nclass Display extends Component {\n  CASES_REPORTED_PER_ACTUAL_CASE = 0.05;\n  // 1 in 20\n\n  odds = () => {\n    // https://marginalrevolution.com/marginalrevolution/2020/03/covid-19-event-risk-assessment-planner.html\n    const {\n      population,\n      dailyCases,\n      daysContagious,\n      percentReported,\n      group,\n    } = this.props;\n    const circulatingCases =\n      (dailyCases * daysContagious) / (percentReported / 100);\n    const prob = 1 - Math.pow(1 - circulatingCases / population, group);\n\n    if (prob >= 0.9999) {\n      // Never be 100% sure of anything...\n      return <p>{\">\"}99.99%</p>;\n    }\n\n    // Nice formatting\n    return <p>{(prob * 100).toFixed(2)}%</p>;\n  };\n\n  formula = () => {\n    const {\n      population,\n      dailyCases,\n      daysContagious,\n      percentReported,\n      group,\n    } = this.props;\n    return (\n      <small>\n        p = 1 - (1 - ({dailyCases.toLocaleString()} * {daysContagious} /{\" \"}\n        {percentReported / 100}) / {population.toLocaleString()}) ^{\" \"}\n        {group.toLocaleString()}\n      </small>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <DisplayChild\n          func={this.odds()}\n          text=\"chance that someone at the event is contageous\"\n        />\n        <br></br>\n        {this.formula()}\n      </div>\n    );\n  }\n}\n\nDisplay.propTypes = {\n  dailyCases: PropTypes.number.isRequired,\n  population: PropTypes.number.isRequired,\n  daysContagious: PropTypes.number.isRequired,\n  percentReported: PropTypes.number.isRequired,\n  group: PropTypes.number.isRequired,\n};\n\nexport default Display;\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\nimport Display from \"./Display\";\n\nimport \"../styles/Calculator.css\";\nimport \"react-input-range/lib/css/index.css\";\n\nclass Calculator extends Component {\n  state = {\n    populationValue: 19450000, // NY\n    dailyCasesValue: 560, // NY 7-day average (July 14th)\n    groupValue: 25,\n    daysContagiousValue: 10,\n    percentReportedValue: 10,\n  };\n\n  updateSearchParams = () => {\n    const params = new URLSearchParams();\n    for (const prop in this.state) {\n      params.append(prop, this.state[prop]);\n    }\n    window.history.replaceState(\n      {},\n      \"\",\n      `${window.location.pathname}?${params}`\n    );\n  };\n\n  handlePopulationChange = (value) => {\n    this.setState({ populationValue: value });\n    this.updateSearchParams();\n  };\n  handleDailyCasesChange = (value) => {\n    this.setState({ dailyCasesValue: value });\n    this.updateSearchParams();\n  };\n  handleDaysContagiousChange = (value) => {\n    this.setState({ daysContagiousValue: value });\n    this.updateSearchParams();\n  };\n  handlePartReportedChange = (value) => {\n    this.setState({ percentReportedValue: value });\n    this.updateSearchParams();\n  };\n  handleGroupChange = (value) => {\n    this.setState({ groupValue: value });\n    this.updateSearchParams();\n  };\n\n  constructor(props) {\n    super(props);\n    for (const [prop, val] of new URLSearchParams(window.location.search)) {\n      this.state[prop] = parseInt(val);\n    }\n  }\n\n  render() {\n    const {\n      populationValue,\n      dailyCasesValue,\n      daysContagiousValue,\n      percentReportedValue,\n      groupValue,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h4>\n          I am attending an event in a state or county with a population of{\" \"}\n          <u>{populationValue.toLocaleString()}</u> residents\n        </h4>\n        <InputRange\n          step={50000}\n          maxValue={40000000}\n          minValue={50000}\n          value={populationValue}\n          onChange={this.handlePopulationChange}\n        />\n        <h4>\n          This state or county has an average of{\" \"}\n          <u>{dailyCasesValue.toLocaleString()}</u> daily new cases per day\n        </h4>\n        <InputRange\n          step={100}\n          maxValue={20000}\n          minValue={0}\n          value={dailyCasesValue}\n          onChange={this.handleDailyCasesChange}\n        />\n        <h4>\n          A person who tested positive for the virus is contagious and\n          circulating for <u>{daysContagiousValue}</u> days\n        </h4>\n        <small>\n          The default value, 10 days, is based the assumptions that a typical\n          case is infectious for{\" \"}\n          <a href=\"https://www.acpjournals.org/doi/10.7326/M20-0504\">\n            3 days before\n          </a>{\" \"}\n          the onset of symptoms and{\" \"}\n          <a href=\"https://www.thelancet.com/journals/laninf/article/PIIS1473-3099(20)30196-1/fulltext\">\n            7 days after\n          </a>\n          .\n        </small>\n        <InputRange\n          step={1}\n          maxValue={30}\n          minValue={1}\n          value={daysContagiousValue}\n          onChange={this.handleDaysContagiousChange}\n        />\n        <h4>\n          Only <u>{percentReportedValue}%</u> of cases are reported\n        </h4>\n        <small>\n          The default value, 10%, is based on{\" \"}\n          <a href=\"https://www.cdc.gov/media/releases/2020/t0625-COVID-19-update.html\">\n            a statement by CDC Director Robert Redfield{\" \"}\n          </a>\n          on June 25th that a good rough estimate of total to reported cases is\n          10-1.\n        </small>\n        <InputRange\n          step={1}\n          maxValue={100}\n          minValue={1}\n          value={percentReportedValue}\n          onChange={this.handlePartReportedChange}\n        />\n        <h4>\n          I'm attending an event with <u>{groupValue.toLocaleString()}</u>{\" \"}\n          people\n        </h4>\n        <InputRange\n          step={1}\n          maxValue={300}\n          minValue={1}\n          value={groupValue}\n          onChange={this.handleGroupChange}\n        />\n        <Display\n          population={populationValue}\n          dailyCases={dailyCasesValue}\n          daysContagious={daysContagiousValue}\n          percentReported={percentReportedValue}\n          group={groupValue}\n        />\n        <br></br>\n        <small>\n          Based on{\" \"}\n          <a href=\"https://marginalrevolution.com/marginalrevolution/2020/03/covid-19-event-risk-assessment-planner.html\">\n            COVID-19 Event Risk Assessment Planner by Alex Tabarrok\n          </a>\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Calculator from \"./components/Calculator\";\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"],"sourceRoot":""}