{"version":3,"sources":["components/DisplayChild.js","components/Display.js","components/SelectUSState.js","components/Calculator.js","index.js"],"names":["DisplayChild","_ref","func","header","text","react_default","a","createElement","defaultProps","Display","CASES_REPORTED_PER_ACTUAL_CASE","odds","_this$props","_this","props","population","dailyCases","daysContagious","percentReported","group","circulatingCases","prob","Math","pow","toFixed","formula","_this$props2","toLocaleString","components_DisplayChild","this","Component","SelectUSState","handleChange","event","onChange","target","value","id","className","states","map","item","key","abbreviation","name","React","getStatePopulation","state","populations","getStateCases","floor","cases","new_cases_7day","Calculator","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","populationValue","dailyCasesValue","groupValue","daysContagiousValue","percentReportedValue","stateValue","updateSearchParams","params","URLSearchParams","prop","append","window","history","replaceState","concat","location","pathname","handlePopulationChange","setState","handleDailyCasesChange","handleDaysContagiousChange","handlePartReportedChange","handleGroupChange","handleStateChange","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","search","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","val","Number","isNaN","parseInt","err","return","_this$state","console","log","components_SelectUSState","js_default","step","maxValue","minValue","Date","date","toDateString","href","components_Display","ReactDOM","render","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.80d129b7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst DisplayChild = ({ func, header, text }) => {\n  return (\n    <span>\n    <h4>{header}</h4>\n      {func} <small>{text}</small>\n    </span>\n  );\n};\n\nDisplayChild.defaultProps = {\n  func: () => <p>Missing numeric value</p>,\n  text: \"No value provided\"\n};\n\nDisplayChild.propTypes = {\n  func: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default DisplayChild;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DisplayChild from \"./DisplayChild\";\n\nclass Display extends Component {\n  CASES_REPORTED_PER_ACTUAL_CASE = 0.05;\n  // 1 in 20\n\n  odds = () => {\n    // https://marginalrevolution.com/marginalrevolution/2020/03/covid-19-event-risk-assessment-planner.html\n    const {\n      population,\n      dailyCases,\n      daysContagious,\n      percentReported,\n      group,\n    } = this.props;\n    const circulatingCases =\n      (dailyCases * daysContagious) / (percentReported / 100);\n    const prob = 1 - Math.pow(1 - circulatingCases / population, group);\n\n    if (prob >= 0.9999) {\n      // Never be 100% sure of anything...\n      return <p>{\">\"}99.99%</p>;\n    }\n\n    // Nice formatting\n    return <p>{(prob * 100).toFixed(2)}%</p>;\n  };\n\n  formula = () => {\n    const {\n      population,\n      dailyCases,\n      daysContagious,\n      percentReported,\n      group,\n    } = this.props;\n    return (\n      <small>\n        p = 1 - (1 - ({dailyCases.toLocaleString()} * {daysContagious} /{\" \"}\n        {percentReported / 100}) / {population.toLocaleString()}) ^{\" \"}\n        {group.toLocaleString()}\n      </small>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <DisplayChild\n          header=\"The chance that at least one person is contagious is\"\n          func={this.odds()}\n          text={this.formula()}\n        />\n        <br></br>\n      </div>\n    );\n  }\n}\n\nDisplay.propTypes = {\n  dailyCases: PropTypes.number.isRequired,\n  population: PropTypes.number.isRequired,\n  daysContagious: PropTypes.number.isRequired,\n  percentReported: PropTypes.number.isRequired,\n  group: PropTypes.number.isRequired,\n};\n\nexport default Display;\n","// Shamelessly ripped from https://github.com/pedrohidalgo/react-select-us-states, needed it to be\n// slightly different\nimport React from \"react\";\nimport states from \"../data/states.json\";\nimport PropTypes from \"prop-types\";\n\nclass SelectUSState extends React.Component {\n  handleChange = (event) => {\n    const { onChange } = this.props;\n    onChange(event.target.value);\n  };\n\n  render() {\n    const { id, className, value } = this.props;\n    return (\n      <select\n        id={id}\n        className={className}\n        onChange={this.handleChange}\n        value={value}\n      >\n        {states.map((item) => (\n          <option key={item.abbreviation} value={item.abbreviation}>\n            {item.name}\n          </option>\n        ))}\n      </select>\n    );\n  }\n}\n\nconst propTypes = {\n  id: PropTypes.string,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n};\n\nSelectUSState.propTypes = propTypes;\n\nexport default SelectUSState;\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\nimport Display from \"./Display\";\nimport SelectUSState from \"./SelectUSState\";\nimport populations from \"../data/pop.json\";\nimport cases from \"../data/cases.json\";\n\nimport \"../styles/Calculator.css\";\nimport \"react-input-range/lib/css/index.css\";\n\nconst getStatePopulation = (state) => {\n  return populations[state].population;\n};\n\nconst getStateCases = (state) => {\n  return Math.floor(cases[populations[state].name].new_cases_7day);\n};\n\nconst getStateDate = (state) => {\n  return new Date(cases[populations[state].name].date).toDateString();\n};\n\nclass Calculator extends Component {\n  state = {\n    populationValue: getStatePopulation(\"NY\"), // NY\n    dailyCasesValue: getStateCases(\"NY\"),\n    groupValue: 25,\n    daysContagiousValue: 10,\n    percentReportedValue: 10,\n    stateValue: \"NY\",\n  };\n\n  updateSearchParams = () => {\n    const params = new URLSearchParams();\n    for (const prop in this.state) {\n      params.append(prop, this.state[prop]);\n    }\n    window.history.replaceState(\n      {},\n      \"\",\n      `${window.location.pathname}?${params}`\n    );\n  };\n\n  handlePopulationChange = (value) => {\n    this.setState({ populationValue: value }, this.updateSearchParams);\n  };\n  handleDailyCasesChange = (value) => {\n    this.setState({ dailyCasesValue: value }, this.updateSearchParams);\n  };\n  handleDaysContagiousChange = (value) => {\n    this.setState({ daysContagiousValue: value }, this.updateSearchParams);\n  };\n  handlePartReportedChange = (value) => {\n    this.setState({ percentReportedValue: value }, this.updateSearchParams);\n  };\n  handleGroupChange = (value) => {\n    this.setState({ groupValue: value }, this.updateSearchParams);\n  };\n  handleStateChange = (stateValue) => {\n    this.setState(\n      {\n        stateValue: stateValue,\n        populationValue: getStatePopulation(stateValue),\n        dailyCasesValue: getStateCases(stateValue),\n      },\n      this.updateSearchParams\n    );\n  };\n\n  constructor(props) {\n    super(props);\n    for (const [prop, val] of new URLSearchParams(window.location.search)) {\n      this.state[prop] = Number.isNaN(parseInt(val)) ? val : parseInt(val);\n    }\n  }\n\n  render() {\n    const {\n      populationValue,\n      dailyCasesValue,\n      daysContagiousValue,\n      percentReportedValue,\n      groupValue,\n      stateValue,\n    } = this.state;\n    console.log(stateValue);\n\n    return (\n      <div className=\"App\">\n        <h4>I am attending an event in</h4>\n        <div>\n          <SelectUSState\n            className=\"state-picker\"\n            value={stateValue}\n            onChange={this.handleStateChange}\n          />\n        </div>\n        <h4>\n          With a population of <u>{populationValue.toLocaleString()}</u>{\" \"}\n          residents\n        </h4>\n        <small>\n          As of the 2019 census, {stateValue} had a population of{\" \"}\n          {getStatePopulation(stateValue).toLocaleString()}.\n        </small>\n        <InputRange\n          step={50000}\n          maxValue={40000000}\n          minValue={50000}\n          value={populationValue}\n          onChange={this.handlePopulationChange}\n        />\n        <h4>\n          And <u>{dailyCasesValue.toLocaleString()}</u> daily new cases per day\n        </h4>\n        <small>\n          As of {getStateDate(stateValue)}, {stateValue} has a 7-day average of{\" \"}\n          {getStateCases(stateValue).toLocaleString()} new cases per day\n          according to the{\" \"}\n          <a href=\"https://github.com/nytimes/covid-19-data\">\n            NYT Covid data set\n          </a>\n          .\n        </small>\n        <InputRange\n          step={100}\n          maxValue={20000}\n          minValue={0}\n          value={dailyCasesValue}\n          onChange={this.handleDailyCasesChange}\n        />\n        <h4>\n          A person who tested positive for the virus is contagious and\n          circulating for <u>{daysContagiousValue}</u> days\n        </h4>\n        <small>\n          The default value, 10 days, is based the assumptions that a typical\n          case is infectious for{\" \"}\n          <a href=\"https://www.acpjournals.org/doi/10.7326/M20-0504\">\n            3 days before\n          </a>{\" \"}\n          the onset of symptoms and{\" \"}\n          <a href=\"https://www.thelancet.com/journals/laninf/article/PIIS1473-3099(20)30196-1/fulltext\">\n            7 days after\n          </a>\n          .\n        </small>\n        <InputRange\n          step={1}\n          maxValue={30}\n          minValue={1}\n          value={daysContagiousValue}\n          onChange={this.handleDaysContagiousChange}\n        />\n        <h4>\n          Only <u>{percentReportedValue}%</u> of cases are reported\n        </h4>\n        <small>\n          The default value, 10%, is based on{\" \"}\n          <a href=\"https://www.cdc.gov/media/releases/2020/t0625-COVID-19-update.html\">\n            a statement by CDC Director Robert Redfield{\" \"}\n          </a>\n          on June 25th that a good rough estimate of total to reported cases is\n          10-1.\n        </small>\n        <InputRange\n          step={1}\n          maxValue={100}\n          minValue={1}\n          value={percentReportedValue}\n          onChange={this.handlePartReportedChange}\n        />\n        <h4>\n          I'm attending an event with <u>{groupValue.toLocaleString()}</u>{\" \"}\n          people\n        </h4>\n        <InputRange\n          step={1}\n          maxValue={300}\n          minValue={1}\n          value={groupValue}\n          onChange={this.handleGroupChange}\n        />\n        <Display\n          population={populationValue}\n          dailyCases={dailyCasesValue}\n          daysContagious={daysContagiousValue}\n          percentReported={percentReportedValue}\n          group={groupValue}\n        />\n        <br></br>\n        <small>\n          Based on{\" \"}\n          <a href=\"https://marginalrevolution.com/marginalrevolution/2020/03/covid-19-event-risk-assessment-planner.html\">\n            COVID-19 Event Risk Assessment Planner by Alex Tabarrok\n          </a>\n          <br></br>\n          source code at{\" \"}\n          <a href=\"https://github.com/x/coronavirus-calculator\">\n            github.com/x/coronavirus-calculator\n          </a>\n          .\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Calculator from \"./components/Calculator\";\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"],"sourceRoot":""}